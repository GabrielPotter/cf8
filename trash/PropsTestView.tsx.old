// import React from "react";
// import { Box, Stack, Typography } from "@mui/material";
// import CodeMirror from "@uiw/react-codemirror";
// import { json } from "@codemirror/lang-json";
// import { vscodeDark } from "@uiw/codemirror-theme-vscode";
// import { ResizableColumns } from "../components/ResizablePanels";
// import { PropertyGrid } from "../components/PropertyGrid";
// import type { JSONSchema } from "@/shared/types";


// const PropsTestView: React.FC = () => {
//     const [schema, setSchema] = React.useState<JSONSchema | null>(null);
//     const [data, setData] = React.useState<any>({});

//     React.useEffect(() => {
//         (async () => {
//             try {
//                 const s = await window.api.readJsonFromData("sample.schema.json");
//                 const d = await window.api.readJsonFromData("sample.data.json");
//                 setSchema(s);
//                 setData(d);
//             } catch (e) {
//                 console.error("Failed to load sample data:", e);
//             }
//         })();
//     }, []);

//     return (
//         <Box sx={{ height: "100%", display: "flex", flexDirection: "column" }}>
//             <Stack
//                 direction="row"
//                 spacing={1}
//                 sx={{ px: 2, py: 1, borderBottom: "1px solid #2d2d2d", alignItems: "center" }}
//             >
//                 <Typography variant="subtitle2">Property Grid — JSON Schema vezérelt szerkesztő (teszt)</Typography>
//             </Stack>

//             <Box sx={{ flex: 1, minHeight: 0 }}>
//                 <ResizableColumns
//                     left={
//                         <Box sx={{ p: 2, height: "100%", overflow: "auto" }}>
//                             {schema ? (
//                                 <PropertyGrid schema={schema} value={data} onChange={setData} indentStep={1} />
//                             ) : (
//                                 <Typography variant="body2" sx={{ opacity: 0.7 }}>
//                                     Minta schema betöltése…
//                                 </Typography>
//                             )}
//                         </Box>
//                     }
//                     right={
//                         <Box sx={{ p: 1, height: "100%", overflow: "hidden" }}>
//                             <Typography variant="caption" sx={{ opacity: 0.8 }}>
//                                 Aktuális adat (JSON)
//                             </Typography>
//                             <CodeMirror
//                                 value={JSON.stringify(data, null, 2)}
//                                 height="calc(100% - 16px)"
//                                 theme={vscodeDark}
//                                 extensions={[json()]}
//                                 onChange={() => {}}
//                                 // read-only megjelenítés
//                                 editable={false as any}
//                             />
//                         </Box>
//                     }
//                     leftDefaultSize={55}
//                 />
//             </Box>
//         </Box>
//     );
// };

// export default PropsTestView;
